version: "3.9"
services:

  #####################
  ## Troubleshooting ##
  #####################
  # ubuntu:
  #   image: ubuntu:latest
  #   container_name: debug
  #   command: ["sleep","infinity"]
  #   networks:
  #     - cloud-native

  ######################
  ## App Dependencies ##
  ######################
  rabbit:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    ports:
      - "15672:15672"
    networks:
      - cloud-native
  ##################
  ## App Services ##
  ##################
  gateway:
    build: ./src/Gateway
    container_name: gateway
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
    environment:
      ASPNETCORE_ENVIRONMENT: DockerCompose
      Gateway__ExposePrometheusMetrics: true
      Gateway__LimitRequestsPerMinute: 2000
      Gateway__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
      DAPR_HTTP_PORT: 9000
    networks:
      - cloud-native
    depends_on:
      - zipkin
    ports:
      - "5000:5000"
  orders:
    build: ./src/OrdersService
    container_name: orders
    networks:
      - cloud-native
    depends_on:
      - zipkin
      - rabbit
    environment:
      OrdersService__ExposePrometheusMetrics: true
      OrdersService__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
      OrdersService__IdentityServer__Authority: http://localhost:5009
      OrdersService__IdentityServer__RequireHttpsMetadata: false
      OrdersService__IdentityServer__MetadataAddress: http://authn:5000/.well-known/openid-configuration
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  products:
    build: ./src/ProductsService
    container_name: products
    environment:
      ProductsService__ExposePrometheusMetrics: true
      ProductsService__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
      ProductsService__IdentityServer__Authority: http://localhost:5009
      ProductsService__IdentityServer__RequireHttpsMetadata: false
      ProductsService__IdentityServer__MetadataAddress: http://authn:5000/.well-known/openid-configuration
    networks:
      - cloud-native
    depends_on:
      - zipkin
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  ordermonitorservice:
    build: ./src/OrderMonitorService
    container_name: order-monitor-service
    environment:
      DAPR_HTTP_PORT: 9000
      OrderMonitorService__Environment: Development
      OrderMonitorService__DisableConsoleLog: false
      OrderMonitorService__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
    networks:
      - cloud-native
    depends_on:
      - orders
      - products
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  notification:
    build: ./src/NotificationService
    container_name: notification
    environment:
      DAPR_API_TOKEN: dGhpcyBpcyBmb3IgZGVtbyBvbmx5LCBpbiByZWFsLXdvcmxkIHVzZSBzb21ldGhpbmcgdGhhdCBpcyBzdG9yZWQgc2VjdXJlbHkK
      NotificationService__ExposePrometheusMetrics: true
      NotificationService__IdentityServer__Authority: http://localhost:5009
      NotificationService__IdentityServer__RequireHttpsMetadata: false
      NotificationService__IdentityServer__MetadataAddress: http://authn:5000/.well-known/openid-configuration
      NotificationService__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
    networks:
      - cloud-native
    depends_on:
      - zipkin
      - rabbit
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  shipping:
    build: ./src/ShippingService
    container_name: shipping
    environment:
      DAPR_API_TOKEN: dGhpcyBpcyBmb3IgZGVtbyBvbmx5LCBpbiByZWFsLXdvcmxkIHVzZSBzb21ldGhpbmcgdGhhdCBpcyBzdG9yZWQgc2VjdXJlbHkK
      ShippingService__Environment: Development
      ShippingService__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
    networks:
      - cloud-native
    depends_on:
      - zipkin
      - rabbit
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  ordermonitor:
    build:
      context: ./src/OrderMonitorClient
      args:
        - TARGET=docker-compose

    container_name: order-monitor-client
    environment:
      - IdentityServer__Uri=http://localhost:5009/
    ports:
      - "5005:8080"
    networks:
      - cloud-native
  authentication:
    build: ./src/AuthenticationService
    container_name: authn
    environment:
      IdentityServer__AllowHttp: true
      #IdentityServer__InteractiveClient__RedirectUris__0: http://localhost:5005/callback.html
      #IdentityServer__InteractiveClient__FrontChannelLogoutUri: http://localhost:5005/signout-oidc
      #IdentityServer__InteractiveClient__PostLogoutRedirectUris__0: http://localhost:5005/signout-callback-oidc
      #IdentityServer__InteractiveClient__AllowedCorsOrigins__0: http://localhost:5005
    ports:
      - "5009:5000"
    networks:
      - cloud-native
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  pricewatcher:
    build: ./src/PriceWatcherService
    container_name: pricewatcher
    networks:
      - cloud-native
    depends_on:
      - rabbit
    environment:
      PriceWatcherService__ExposePrometheusMetrics: true
      PriceWatcherService__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
      PriceWatcherService__IdentityServer__Authority: http://localhost:5009
      PriceWatcherService__IdentityServer__RequireHttpsMetadata: false
      PriceWatcherService__IdentityServer__MetadataAddress: http://authn:5000/.well-known/openid-configuration
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  pricedropnotifier:
    build: ./src/PriceDropNotifierService
    container_name: pricedropnotifier
    networks:
      - cloud-native
    depends_on:
      - smtp
    environment:
      DAPR_API_TOKEN: dGhpcyBpcyBmb3IgZGVtbyBvbmx5LCBpbiByZWFsLXdvcmxkIHVzZSBzb21ldGhpbmcgdGhhdCBpcyBzdG9yZWQgc2VjdXJlbHkK
      PriceDropNotifierService__ExposePrometheusMetrics: true
      PriceDropNotifierService__ZipkinEndpoint: http://zipkin:9411/api/v2/spans
      PriceDropNotifierService__IdentityServer__Authority: http://localhost:5009
      PriceDropNotifierService__IdentityServer__RequireHttpsMetadata: false
      PriceDropNotifierService__IdentityServer__MetadataAddress: http://authn:5000/.well-known/openid-configuration
      Logging__LogLeveL__Microsoft.AspNetCore: Information
    logging:
      driver: loki
      options:
        loki-url: http://10.5.0.99:3100/loki/api/v1/push
        loki-retries: 5
  ###################
  ## Dapr Sidecars ##
  ###################
  gateway-dapr:
    image: "daprio/daprd:edge"
    container_name: gateway-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "gateway",
        "-app-port",
        "5000",
        "-dapr-http-port",
        "9000",
        "-dapr-grpc-port",
        "10000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:gateway"
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - gateway
  orders-dapr:
    image: "daprio/daprd:edge"
    container_name: orders-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "orders",
        "-app-port",
        "5000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:orders"
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - orders
  products-dapr:
    image: "daprio/daprd:edge"
    container_name: products-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "products",
        "-app-port",
        "5000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:products"
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - products
  ordermonitorservice-dapr:
    image: "daprio/daprd:edge"
    container_name: ordermonitorservice-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "ordermonitorservice",
        "-app-port",
        "5000",
        "-dapr-http-port",
        "9000",
        "-dapr-grpc-port",
        "10000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:ordermonitorservice"
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - ordermonitorservice
  notification-dapr:
    image: "daprio/daprd:edge"
    container_name: notification-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "notification",
        "-app-port",
        "5000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:notification"
    environment:
      APP_API_TOKEN: dGhpcyBpcyBmb3IgZGVtbyBvbmx5LCBpbiByZWFsLXdvcmxkIHVzZSBzb21ldGhpbmcgdGhhdCBpcyBzdG9yZWQgc2VjdXJlbHkK
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - notification
  shipping-dapr:
    image: "daprio/daprd:edge"
    container_name: shipping-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "shipping",
        "-app-port",
        "5000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:shipping"
    environment:
      APP_API_TOKEN: dGhpcyBpcyBmb3IgZGVtbyBvbmx5LCBpbiByZWFsLXdvcmxkIHVzZSBzb21ldGhpbmcgdGhhdCBpcyBzdG9yZWQgc2VjdXJlbHkK
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - shipping
  pricewatcher-dapr:
    image: "daprio/daprd:edge"
    container_name: pricewatcher-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "pricewatcher",
        "-app-port",
        "5000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:pricewatcher"
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - pricewatcher
  pricedropnotifier-dapr:
    image: "daprio/daprd:edge"
    container_name: pricedropnotifier-dapr
    command:
      [
        "./daprd",
        "-app-id",
        "pricedropnotifier",
        "-app-port",
        "5000",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config/config.yml"
      ]
    network_mode: "service:pricedropnotifier"
    environment:
      APP_API_TOKEN: dGhpcyBpcyBmb3IgZGVtbyBvbmx5LCBpbiByZWFsLXdvcmxkIHVzZSBzb21ldGhpbmcgdGhhdCBpcyBzdG9yZWQgc2VjdXJlbHkK
    volumes:
      - ./docker-compose-configs/dapr/config.yml:/dapr/config/config.yml:ro
      - ./docker-compose-configs/dapr/components:/dapr/components:ro
    depends_on:
      - pricedropnotifier
  ###################
  ## Observability ##
  ###################
  loki:
    image: grafana/loki:2.5.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      cloud-native:
        ipv4_address: 10.5.0.99
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./docker-compose-configs/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker-compose-configs/grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - cloud-native
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker-compose-configs/prometheus:/etc/prometheus:ro
    depends_on:
      - alertmanager
    networks:
      - cloud-native
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - "./docker-compose-configs/alertmanager:/config"
    command: --config.file=/config/alertmanager.yml --log.level=debug
    depends_on:
      - smtp
    networks:
      - cloud-native
  smtp:
    image: gessnerfl/fake-smtp-server:1.10.4
    container_name: smtp
    environment:
      - SPRING_MAIL_USERNAME=cnadmin
      - SPRING_MAIL_PASSWORD=somepassword
    ports:
      - "5080:5080"
    networks:
      - cloud-native
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    privileged: true
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
    networks:
      - cloud-native
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - cloud-native
  zipkin:
    image: "openzipkin/zipkin"
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - cloud-native

###################
## Network Setup ##
###################
networks:
  cloud-native:
    driver: bridge
    name: cloud-native
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
