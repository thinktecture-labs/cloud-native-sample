name: "Demo: From RUN to RENT"
on:
  workflow_dispatch:
concurrency:
  group: terraform
env:
  TERRAFORM_VERSION: 1.3.1
  KUBELOGIN_VERSION: v0.0.20
jobs:
  infra:
    name: "Deploy dapr to k8s"
    runs-on: ubuntu-latest
    env:
      TF_VAR_acr_name: ${{ secrets.ACR_NAME }}
      TF_VAR_acr_token_name: ${{ secrets.ACR_TOKEN_NAME }}
      TF_VAR_rabbitmq_password: ${{ secrets.RABBITMQ_PASSWORD }} 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Print Terraform CLI version
        run: terraform version
      - name: Setup kubelogin
        run: |
          curl -LO https://github.com/Azure/kubelogin/releases/download/$KUBELOGIN_VERSION/kubelogin-linux-amd64.zip
          sudo unzip -j kubelogin-linux-amd64.zip -d /usr/local/bin
          rm -f kubelogin-linux-amd64.zip
          kubelogin --version
      - name: 'az CLI login'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.TERRAFORM_CLIENT_ID }}","clientSecret":"${{ secrets.TERRAFORM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TERRAFORM_TENANT_ID }}"}'
      - uses: azure/aks-set-context@v3
        with:
          resource-group: 'rg-cloud-native-sample-develop'
          cluster-name: 'aks-cloud-native-sample'
          admin: 'false'
          use-kubelogin: 'true'
      - name: Set KUBE_CONFIG_PATH tp KUBECONFIG
        run: echo "KUBE_CONFIG_PATH=${KUBECONFIG}" >> $GITHUB_ENV
      - name: Check Format
        run: terraform fmt -no-color -check
        working-directory: ./iac/dapr
      - name: Initialize Terraform Project
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.TERRAFORM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
        working-directory: ./iac/dapr
      - name: Validate Terraform Project
        run: terraform validate -no-color
        env:
          ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.TERRAFORM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
        working-directory: ./iac/dapr
      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.TERRAFORM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
          TF_VAR_message_broker: azservicebus
          TF_VAR_dapr_api_auth_token: ${{ secrets.DAPR_API_TOKEN }}
        working-directory: ./iac/dapr
      - name: Restart Deployments
        run: |
          kubectl config set-context --current --namespace cloud-native-sample
          kubectl get deploy --no-headers=true | grep -v authentication | awk '{print $1}' | xargs -I _ kubectl kubectl rollout restart deploy _

